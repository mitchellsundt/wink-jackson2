# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#  
#   http://www.apache.org/licenses/LICENSE-2.0
#  
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.  

# Class and Method Validation
classNotAProvider=The {0} class is not annotated with @javax.ws.rs.ext.Provider and is being returned by a javax.ws.rs.core.Application subclass. The runtime is ignoring this class.  Add a @javax.ws.rs.ext.Provider annotation to the class.
classNotAResourceNorProvider=The {0} class is neither a resource nor a provider. The runtime is ignoring this class. It was returned from a javax.ws.rs.core.Application subclass. Add either a @javax.ws.rs.Path or a @javax.ws.rs.core.Provider annotation to the class.
classAlreadyAdded=The class {0} was already added to the JAX-RS runtime. The runtime is ignoring this value.  Check that this class was not returned in the javax.ws.rs.core.Application subclass getSingletons() and getClasses() methods.
classNotValid=The class {0} can only have one of the following declarations: {1} {2} {3} .  Ensure that the class has only one annotation. If the class has only one annotation, ensure that it does not also implement the {2} interface.
classIsUnknownProvider=The @javax.ws.rs.ext.Provider annotated class {0} does not implement a recognized Provider interface. The runtime is ignoring this class. Verify that the class implements javax.ws.rs.ext.ContextResolver, javax.ws.rs.ext.ExceptionMapper, javax.ws.rs.ext.MessageBodyReader, or javax.ws.rs.ext.MessageBodyWriter.
classInstantiationExceptionWithMsgFormat=The runtime environment failed to instantiate the {0} class. Ensure that the class is not abstract, has a valid constructor, has the right visibility, and is not an inner member class.
loadingClassToApplication=The class {0} was added to the JAX-RS application.
loadingApplication=The runtime is loading the JAX-RS application from {0}

exceptionOccurredDuringClassProcessing=An exception occurred during processing of the {0} class. This class is ignored.
listExceptionDuringClassProcessing=The following exception occurred during processing of class: 
exceptionOccurredDuringSingletonProcessing=An exception occurred during processing of the {0} singleton. This singleton is ignored
exceptionOccurredDuringInstanceProcessing=An exception occurred during processing of the {0} instance. This instance is ignored.

methodNotAnnotatedCorrectly=The method {0} in the {1} class is not annotated with an HTTP method designator or the @javax.ws.rs.Path annotation. This method is ignored.  Annotate this method with a single @javax.ws.rs.GET, @javax.ws.rs.POST, @javax.ws.rs.PUT, @javax.ws.rs.DELETE or any other @javax.ws.rs.HttpMethod annnotation if this method should be a JAX-RS resource method.
subresourceLocatorIllegalEntityParameter=The {0} sub-resource locator contains an illegal entity parameter. The locator is ignored.  Remove the entity parameter from the sub-resource locator method definition.
subresourceLocatorAnnotatedConsumesProduces=The {0} sub-resource locator is annotated with @javax.ws.rs.Consumes/@javax.ws.rs.Produces. These annotations are ignored for sub-resource locators.

# Loading config
configNotFound=The system could not find the JAX-RS application config file {0}.  This value is ignored.
exceptionClosingFile=An exception occured when closing the file.

# Provider Information
uploadDirDoesNotExist=The upload directory {0} does not exist or is not a directory.  The entity is uploaded to a default temporary directory defined by the JVM system property "java.io.tmpdir".  Create the upload directory and verify that the file permissions are set appropriately.
cannotUseFileAsResponse=The system cannot read the {0} file to serve as a HTTP response. The file is not readable or is a directory. Verify that the file exists and the correct file permissions are set.

# internals
mediaTypeSetAlreadyContains=The internal Providers MediaTypeSet already contains the {0} ObjectFactory.

# Injection
injectionFailureSingleton=The system cannot inject the fields of the {0} singleton bean.

# Asset Provider
assetLocatorMethodMoreThanOneEntityParam=The {0} asset locator method has more than one entity parameter. You must use only one entity parameter.
assetMethodInvokeError=An error occurred when the system invoked the {0} asset method. 
assetMustHavePublicConstructor=The {0} asset cannot be instantiated.  Verify that your assets have a default public constructor defined.
assetCannotInstantiate=The {0} asset cannot be instantiated.  Verify that your assets have a default public constructor defined.

# Failure Messages
mediaTypeWrongFormat=The {0} is not a valid MediaType format. You must use the following format: type/subtype.

# Client Handler
clientIssueRequest=The client issued a request with {0}  HTTP method to the URI at {1} with the {2} entity class and {3} headers.
clientAcceptHeaderHandlerSetAccept=The accept header is automatically set to the following value: {0}
clientResponseIsErrorCode=The client response returned the following error code: {0}
clientConfigurationUnmodifiable=The client configuration cannot be modified because it is in use by a client.  A new client configuration must be constructed to modify the client configuration.
entityTypeMustBeParameterized=The EntityType class must be parameterized.  Add a generic parameter to the EntityType.
clientNoWriterForTypeAndMediaType=A javax.ws.rs.ext.MessageBodyWriter implementation was not found for the {0} type and {1} media type.  Verify that all entity providers are correctly registered.  Add a custom javax.ws.rs.ext.MessageBodyWriter provider to handle the type and media type if a JAX-RS entity provider does not currently exist.
clientCannotConvertEntity=An entity of {0} type cannot be cast as the following type: {1}
clientNoReaderForTypeAndMediaType=A javax.ws.rs.ext.MessageBodyReader implementation was not found for {0} type and {1} media type.  Verify that all entity providers are correctly registered.  Add a custom javax.ws.rs.ext.MessageBodyReader provider to handle the type and media type if a JAX-RS entity provider does not currently exist.

# JCDI
#jcdiSingletonObjectFactoryCannotInstantiateInstance=Cannot create an instance of the JCDI managed bean class {0}.  Verify that the bean is a singleton or is annotated with @javax.enterprise.context.ApplicationScoped. 

# others
methodCannotHandleType=The system cannot determine the class of type {0}.
missingVariable=The {0} variable is missing. Verify that null is not being passed in.
valueAtIndexIsNull=The value argument at index {0} is null. Verify that the argument at the index specified is not null.
variableIsEmpty=The {0} variable is empty. Verify that the variable is not empty.
resourceNotAnnotated=The resource class {1} is not annotated with the {0} annotation.
methodNotAnnotated=The method {1} is not annotated with the {0} annotation.
moreThanOneMethodAnnotated=There is more than one method with name {1} in resource {2} with the {0} annotation. Verify that the annotation is used on only one of the methods. 
noMethodAnnotated=A method with name {1} in resource {2} with the {0} annotation does not exist.
invalidPort=The port value of {0} is not valid. Verify that the port specified was correct.
isInvalid=The {0} value of {1} is invalid.
segmentAtIndexIsNull=The segment at index {0} is null. Specify a non-null value at that index.
variableIsNull=The value of the {0} variable is null. Specify a non-null value.
variableNotSuppliedAValue=The {0} variable was not supplied a value. Provide a value for this variable.
patternNotCompiled=The pattern is not compiled. Compile the pattern with the compile method.
syntaxErrorInvalidTemplateForm=The {0} value contains a syntax error that results in an invalid template form. Verify that the value is a valid template.
valueFromMethodMustBeType=The value that is returned from the {0} method must be of the following type: {1}
notASupportedResourceMethodParam=The {0} type is not a supported resource method parameter.
cannotConvertValueFromTo=The system cannot convert the {0} value to {1}.
cannotCreateFactoryForClass=A factory for the {0} class cannot be created. Ensure that it is a valid provider, resource, or JAX-RS application sub-class.
cannotCreateDefaultFactoryForDR=The default factory for the {0} DynamicResource cannot be created.
cannotCreateDefaultFactoryFor=The default factory for the {0} class cannot be created.
cookieCannotContainAddlVers=The cookie cannot contain an additional $Version value: {0}
cookieMustStartWithVersion=The cookie must start with a $Version: {0}
cookieDoesNotContainNAMEVALUE=The {0} cookie does not contain a NAME+VALUE.
failedToParseCookie=The {0} cookie cannot be parsed.
invalidCookie=The {0} cookie is not valid.
jaxrsCacheControlTypeSupport=The JAX-RS CacheControl type is designed to support only cache-response-directives
headerIsNull=The {0} header is null.
cookieIsNull=The cookie is null.
cookieNameNotValid=The {0} name of the cookie is not valid.
cookieNameValueNotValid=The {0} value for the cookie is not valid.
entityTagNotQuoted=The syntax of the {0} entity tag is not specified correctly.  The entity tag must be quoted.
noValidConstructorFoundFor=A valid constructor could not be found for class {0}.  Verify that the class has a valid constructor and is not a Java inner class.
unsupportedOperator=The {0} is an unsupported operator.
conflictingParameterAnnotations=There are conflicting parameter annotations for {0}.  Two or more parameter annotations are used. Be sure only one annotation is used.
couldNotFindWriter=The system could not find a writer for {0} and {1}.  Locate a DataSourceProvider for the JavaBeans Activation Framework (JAF).
mediaTypeHeaderNull=The MediaType header is null.
multiPartStreamAlreadyClosed=The stream is already closed. The PartInputStream is not accessible after moving to the next part.
lastMatchWasUnsuccessful=The last match was unsuccessful.
variableContainsMoreThanOneValueForJoinOperator=The {0} variable contains more than one value for the join operator.
matchedSuffixMustEndWith=The matched suffix must end with ''{0}''.
matchedSuffixMustStartWith=The matched suffix must start with ''{0}''.
listOperatorMustHaveOnlyOneVariable=The list operator must only have one variable.
suffixOperatorMustOnlyHaveOneVariable=The suffix operator must have only one variable.
prefixOperatorMustHaveOnlyOneVariable=The prefix operator must have only one variable.
missingClientAuthenticationCredentialForUser=The client authentication is missing a credential for user: {0}
missingClientAuthenticationCredentialForProxyUser=The client authentication is missing a credential for proxy user: {0}
serviceFailedToAuthenticateUser=The service failed to authenticate user: {0}
serviceFailedToAuthenticateProxyUser=The proxy failed to authenticate proxy user: {0}
providerShouldBeAnnotatedDirectly=The @javax.ws.rs.ext.Provider annotation was found on the superclass or interface {1} of the {0} class.  Annotate @javax.ws.rs.ext.Provider on the provider class directly to ensure portability between environments.
rootResourceShouldBeAnnotatedDirectly=The @javax.ws.rs.Path annotation was found on the superclass or interface {1} of the {0} class.  Annotate @javax.ws.rs.Path on the root resource class directly to ensure portability between environments.
providerIsInterfaceOrAbstract=A @javax.ws.rs.ext.Provider annotation was found on {0} which is an interface or an abstract class and is being ignored. Annotate @javax.ws.rs.ext.Provider on the provider implementation or base class directly and return that in your javax.ws.rs.core.Application subclass.
followingProviders=The following JAX-RS providers are registered: {0}
followingProvidersUserDefined=The following user-defined JAX-RS providers are registered: {0}
multipleHttpMethodAnnotations=Multiple javax.ws.rs.HttpMethod annotations on method {0} in class {1} were found. Use only a single annotation on the method.
